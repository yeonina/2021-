
#-*-coding: utf-8 -*-
import os
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split

print(" ")

#데이터 처리
#CSV 파일 불러오기 
data = pd.read_csv("./data_set.CSV", encoding='cp949')
data = pd.DataFrame(data)
"""
print(data)
print(" ")
"""
#불필요한 열 제거 
data.drop(['년도/월'],axis=1,inplace=True)

#불필요한 행 제거
data.drop(index=[240,241,242], axis=0, inplace=True)

print(data)
print(" ")
#자료형 변형
#ValueError: Unknown label type: 'continuous' :: ydata type shoud be int
data = data.apply(pd.to_numeric)
data = data.astype({'환율':int})
print(data.dtypes)
print(" ")
#데이터 분류하기/ 독립변수, 종속변수 

from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn import metrics
from sklearn.metrics import mean_squared_error


x = data.drop(['환율'], axis=1, inplace=False)
y = data['환율']

#학습데이터 85% (204/36)
x_train, x_test, y_train, y_test = train_test_split(x,y, test_size= 0.15)
print(len(x_train),len(x_test),len(y_train),len(y_test))



#학습 
rf = RandomForestClassifier(n_estimators = 200, max_depth=100)
rf.fit(x_train, y_train)

#예측
y_predict = rf.predict(x_test)
y_real = y_test
print(list(y_real))
print(" ")
print(y_predict)
print(" ")


#정확도 확인
print("정확도:", metrics.accuracy_score(y_real, y_predict))

print("평균제곱오차:", mean_squared_error(y_real, y_predict))

#시각화
import matplotlib.pyplot as plt
import matplotlib.font_manager as fm
font_path = ("./NanumBarunGothic.ttf")
fontprop = fm.FontProperties(fname=font_path, size = 9)

features = []
for f in data.columns:
    features.append(f)
importances = rf.feature_importances_
indices =np.argsort(importances)

plt.title('Feature Importances')
plt.barh(range(len(indices)), importances[indices], color='g', align ='center')
plt.yticks(range(len(indices)), [features[i] for i in indices], fontproperties = fontprop)
plt.xlabel("Relative importance")
plt.show()
